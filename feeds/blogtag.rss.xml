<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Programming warfare - blog</title><link>https://harunx9.github.io/</link><description></description><lastBuildDate>Mon, 11 Feb 2019 18:00:00 +0100</lastBuildDate><item><title>Functional flavor in C# 7 with pattern matching</title><link>https://harunx9.github.io/functional-flavor-in-c-7-with-pattern-matching.html</link><description>&lt;p&gt;With many great features C# 7 comes with new and shiny pattern matching. I know that this feature is less usable then in other languages, but it add new possibilities to coding. In this article I want to share with you my experiments with monads.&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;Optional&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;I believe that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Mon, 11 Feb 2019 18:00:00 +0100</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2019-02-11:/functional-flavor-in-c-7-with-pattern-matching.html</guid><category>blog</category><category>.net</category><category>programming</category><category>c#</category><category>functional pregramming</category><category>pattern matching</category></item><item><title>Jak stać się junior developerem - Tutorial cz. 2</title><link>https://harunx9.github.io/jak-stac-sie-junior-developerem-tutorial-cz-2.html</link><description>&lt;p&gt;Cześć, pod poprzednim artykułem pokazało się kilka komentarzy, które uświadomiły mi, że to co napisałem nie jest do końca kompletne i usystematyzowane. Dziś postaram się nieco uzupełnić poprzedni wpis dodając elementy, które były treścią komentarzy. Zacznijmy standardowo od aspektów związanych bezpośrednio z pracą programisty, tak bez wchodzenia w konkretną technologię …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Thu, 30 Nov 2017 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-11-30:/jak-stac-sie-junior-developerem-tutorial-cz-2.html</guid><category>blog</category><category>inne</category><category>it</category><category>praca</category></item><item><title>Jak stać się junior developerem - Tutorial</title><link>https://harunx9.github.io/jak-stac-sie-junior-developerem-tutorial.html</link><description>&lt;p&gt;Cześć. Ostatnio nie mam zbyt wiele czasu pisać, ale jest jeden temat na który powinienem się wypowiedzieć. Kilku moich znajomych próbuje się przekwalifikować z jakieś innej dziedziny na programistę lub dostać prace w it, więc zadają mi pytania jak to zrobić. Jestem dość specyficzną osobą, to znaczy odnalazłem pasję w …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Mon, 20 Nov 2017 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-11-20:/jak-stac-sie-junior-developerem-tutorial.html</guid><category>blog</category><category>inne</category><category>it</category><category>praca</category></item><item><title>Hello World rok później</title><link>https://harunx9.github.io/hello-world-rok-pozniej.html</link><description>&lt;p&gt;Cześć.  16 października 2016 czyli ponad rok temu temu wystartowałem z blogiem, ponieważ chciałem robić coś poza siedzeniem w piwnicy i klepaniem kolejnych linijek kodu. Zauważyłem, że dodatkowo taki blog może być świetnym miejscem na wymianę idei, czy rozwijanie swojego kodowania.
 Co udało się przez ten rok osiągnąć:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;48 wpisów …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Wed, 18 Oct 2017 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-10-18:/hello-world-rok-pozniej.html</guid><category>blog</category><category>inne</category></item><item><title>.NET klasy internal a testy jednostkowe</title><link>https://harunx9.github.io/net-klasy-internal-a-testy-jednostkowe.html</link><description>&lt;p&gt;Cześć. Dużo się ostatnio naoglądałem i naczytałem o DDD i architekturze port-adapter i tak zacząłem rozmyślać jak to osiągnąć, choćby w kontekście tooli, które piszę do swojego silnika.&lt;/p&gt;
&lt;p&gt;Z tego co zauważyłem, to w projektach z którymi przyszło mi pracować, większość klas jest publiczna. Jest to zrozumiałe, chcemy mieć testy …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Mon, 18 Sep 2017 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-09-18:/net-klasy-internal-a-testy-jednostkowe.html</guid><category>blog</category><category>.net</category><category>programming</category><category>c#</category></item><item><title>.NET dev na detoksie, czyli Visual Studio 2017 bez Resharpera</title><link>https://harunx9.github.io/net-dev-na-detoksie-czyli-visual-studio-2017-bez-resharpera.html</link><description>&lt;p&gt;Cześć. Dziś będzie trochę o narzędziach pracy. Jak wiadomo przynajmniej do niedawana, jako .NET developerzy mieliśmy jedno IDE, czyli &lt;a href="https://www.visualstudio.com/pl/vs/"&gt;Visual Studio&lt;/a&gt; ewentualnie jak ktoś chciał mógł używać &lt;a href="http://www.monodevelop.com/"&gt;MonoDevelop&lt;/a&gt;. Obecnie po ostatnim otwarciu się Microsoftu na świat Open Source  pojawiało się masę edytorów wspierających C# i IntelliSense za pomocą &lt;a href="http://www.omnisharp.net/"&gt;OmniSharp&lt;/a&gt;. Dodatkowo …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Sat, 09 Sep 2017 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-09-09:/net-dev-na-detoksie-czyli-visual-studio-2017-bez-resharpera.html</guid><category>blog</category><category>.net</category><category>programming</category><category>c#</category><category>visualstudio</category><category>refactoring</category><category>resharper</category></item><item><title>Komponentowe CLI część 2. Implementacja</title><link>https://harunx9.github.io/komponentowe-cli-czesc-2-implementacja.html</link><description>&lt;p&gt;Cześć. Ostatnio przedstawiłem wam zamysł mojego modułowego systemu do tworzenia tooli CLI w .NET Core. To co będę prezentował w tym poście jest to implementacja POC, więc kod momentami jest robiony na szybko. Będę pisał o tym co myślę, że można jeszcze poprawić w dalszej części artykułu. Na początku zanim …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Sat, 02 Sep 2017 16:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-09-02:/komponentowe-cli-czesc-2-implementacja.html</guid><category>blog</category><category>.net</category><category>programming</category><category>c#</category><category>.netcore</category><category>cli</category></item><item><title>Komponentowe CLI część 1. Potrzeba oraz dostępne rozwiązania</title><link>https://harunx9.github.io/komponentowe-cli-czesc-1-potrzeba-oraz-dostepne-rozwiazania.html</link><description>&lt;p&gt;Cześć. Ostatni post o automatycznej rejestracji komponentów w Autofac był jedynie wstępem do tego co chcę osiągnąć w narzędziach, które obecnie pisze. Co do samych narzędzi to chciałbym mieć takie oto rozwiązania:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Texture packer - narzędzie do pakowanie spritesheetów i animacji, które będzie rozumiał 2DXngine,&lt;/li&gt;
&lt;li&gt;Project generator - generuje podstawowy projekt 2DXngine …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Sun, 27 Aug 2017 12:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-08-27:/komponentowe-cli-czesc-1-potrzeba-oraz-dostepne-rozwiazania.html</guid><category>blog</category><category>.net</category><category>programming</category><category>c#</category><category>.netcore</category><category>cli</category></item><item><title>Automatyczna rejestracja zależności w Autofac na .NETCore</title><link>https://harunx9.github.io/automatyczna-rejestracja-zaleznosci-w-autofac-na-netcore.html</link><description>&lt;p&gt;Cześć. Dawno mnie nie było, ale ostatnio w większym stopniu skupiłem się na 2DXngine, więc czasu na pisanie postów automatycznie jest mniej. Ze względu na to, że obecnie implementuję narzędzia potrzebne do pracy z silnikiem (repo jest &lt;a href="https://github.com/Harunx9/Xngine.Tools"&gt;TU&lt;/a&gt;) chciałem nieco napisać o mechanizmach, które tam tworzę. Po pierwsze całość będzie …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Sun, 20 Aug 2017 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-08-20:/automatyczna-rejestracja-zaleznosci-w-autofac-na-netcore.html</guid><category>blog</category><category>.net</category><category>programming</category><category>c#</category></item><item><title>DSP 2017: Podsumowanie</title><link>https://harunx9.github.io/dsp-2017-podsumowanie.html</link><description>&lt;p&gt;Cześć, wiem, że trochę już po nie w czasie zamieszczam podsumowanie konkursu Daj Się Poznać 2017, ale ważne, że jest. Po pierwsze chciałbym podziękować wszystkim odwiedzjącym i komentującym. Mam nadzieję, że również po konkursie będziecie odwiedzać mojego bloga. Ztego miejsca zapraszam do dyskusji, ponieważ tylko tak można wymienić się wiedzą …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Thu, 08 Jun 2017 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-06-08:/dsp-2017-podsumowanie.html</guid><category>blog</category><category>inne</category></item><item><title>Co dalej</title><link>https://harunx9.github.io/co-dalej.html</link><description>&lt;p&gt;Cześć, 
Wiem, że dawno nie było żadnych postów. Musiałem nieco przemyśleć to czym chce się dalej na blogu zajmować.
Z moich przemyśleń wynikają następujące decyzje. 
Po pierwsze chciałbym tworzyć wpisy w znacznej części poświęcone tworzeniu gier komputerowych.
Co do Akka.NET i C++ to postaram się ją w miarę możliwości …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Sat, 18 Feb 2017 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2017-02-18:/co-dalej.html</guid><category>blog</category><category>inne</category></item><item><title>Akka.NET: Instalacja i obowiązkowy “Hello world”</title><link>https://harunx9.github.io/akkanet-instalacja-i-obowiazkowy-hello-world.html</link><description>&lt;p&gt;Jakiś czas temu pisałem na temat aktor model z perspektywy pracy z nim. Osoby, które spotykają się z tym tematem po raz pierwszy odsyłam do poprzedniego posta.
W tej serii mam zamiar przedstawić Wam Akka.NET, czy port aktor modelu prosto z JVM. Zabawę zaczniemy od prostego “Hello world”. W …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Tue, 06 Dec 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2016-12-06:/akkanet-instalacja-i-obowiazkowy-hello-world.html</guid><category>blog</category><category>.net</category><category>programming</category><category>c#</category><category>actror model</category><category>Akka.NET</category><category>Akka</category></item><item><title>C/C++: Instrukcje warunkowe if i switch</title><link>https://harunx9.github.io/cc-instrukcje-warunkowe-if-i-switch.html</link><description>&lt;p&gt;Zdaję sobie sprawę z tego,że ostatni post był nieco przydługi i zostało w nim przekazane więcej elementów, dlatego zdecydowałem się na nieco mniejsze objętościowo posty (jeżeli jakiś temat będzie nieco dłuższy to podzielę go na kilka postów, zamiast starać się upchać wszystko razem). 
W trzeciej już części artykułów  o …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Tue, 29 Nov 2016 01:00:00 +0100</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2016-11-29:/cc-instrukcje-warunkowe-if-i-switch.html</guid><category>blog</category><category>tutorial</category><category>programming</category></item><item><title>O actor model z perspektywy paru miesięcy pracy</title><link>https://harunx9.github.io/o-actor-model-z-perspektywy-paru-miesiecy-pracy.html</link><description>&lt;p&gt;Cześć. Jako, że od pewnego czasu actor model staje się coraz bardziej popularny w technologii .NET chciałem nieco więcej opowiedzieć o pracy z takim rozwiązaniem. 
W pierwszym poście chciałem wprowadzić nieco moich przemyśleń i teorii bez kodu. 
Gdyby zdarzyło się tak, iż, jeszcze nie wiesz co to jest actor model …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Sun, 13 Nov 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2016-11-13:/o-actor-model-z-perspektywy-paru-miesiecy-pracy.html</guid><category>blog</category><category>.net</category><category>programming</category><category>c#</category><category>actror model</category><category>Akka.NET</category><category>Akka</category></item><item><title>C/C++: Typy danych, zmienne i operatory</title><link>https://harunx9.github.io/cc-typy-danych-zmienne-i-operatory.html</link><description>&lt;p&gt;Witam ponownie, jeżeli to czytasz to znaczy, że wróciłeś po więcej C++. W tym wpisie postaram się przedstawić typy danych, operatory i koncepcję zmiennej. Zaczniemy od tego jakie możemy mieć zmienne w C++. 
Typów podstawowych jest sporo, więc postaram się omówić najpopularniejsze i najczęściej używane:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;int min: -2147483648 max: 2147483647 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Mon, 31 Oct 2016 01:00:00 +0100</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2016-10-31:/cc-typy-danych-zmienne-i-operatory.html</guid><category>blog</category><category>tutorial</category><category>programming</category></item><item><title>Czy wiesz co robi za Ciebie kompilator?: Funkcje lambda</title><link>https://harunx9.github.io/czy-wiesz-co-robi-za-ciebie-kompilator-funkcje-lambda.html</link><description>&lt;p&gt;Cześć, kiedyś ludzie mówili mi, że nie należy wkładać palców między drzwi, bo może zaboleć. Niestety jakoś tak wychodzi, że jestem ciekawy jak
działa to z czym pracuję, więc zacząłem się nieco przyglądać jak wygląda .NET pod maską i nawet mi się spodobało.
Na pierwszy ogień pójdą dziś funkcje lambda …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Mon, 24 Oct 2016 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2016-10-24:/czy-wiesz-co-robi-za-ciebie-kompilator-funkcje-lambda.html</guid><category>blog</category><category>.net</category><category>programming</category><category>c#</category></item><item><title>C/C++: Konfiguracja środowiska</title><link>https://harunx9.github.io/cc-konfiguracja-srodowiska.html</link><description>&lt;p&gt;No i stało się, pierwszy techniczny post na blogu. Na samym początku muszę się Wam do czegoś przyznać, a mianowicie od mojego ostatniego razu z C/C++ minęły około 2 lata. Wracam do tego języka pisząc niewielkich rozmiarów silnik do gier. Doszedłem do wniosku, że fajnym pomysłem będzie szybkie przejście …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Sun, 16 Oct 2016 01:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2016-10-16:/cc-konfiguracja-srodowiska.html</guid><category>blog</category><category>tutorial</category><category>programming</category></item><item><title>3.2.1 start</title><link>https://harunx9.github.io/321-start.html</link><description>&lt;p&gt;Cześć, &lt;/p&gt;
&lt;p&gt;Po dość długim czasie zastanawiania się czy inicjatywa w postaci kolejnego bloga technologicznego ma sens, postanowiłem jednak wystartować. &lt;/p&gt;
&lt;p&gt;W miarę moich możliwości czasowych, postaram się jak najczęściej dodawać posty.
Tematy, które będę poruszał w niniejszym blogu w dużej mierze będą dotyczyć technologii .NET/C# oraz C/C++ w kontekście …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Wanot</dc:creator><pubDate>Sun, 16 Oct 2016 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:harunx9.github.io,2016-10-16:/321-start.html</guid><category>blog</category><category>inne</category></item></channel></rss>